{
	"info": {
		"_postman_id": "6eda4c8d-d4b7-4f38-a381-a10c4d861906",
		"name": "\"Explore with me\" API –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45548734",
		"_collection_link": "https://aleksaandr.postman.co/workspace/Aleksaandr's-Workspace~72457073-eac3-4bac-8680-c1970e444875/collection/45548734-6eda4c8d-d4b7-4f38-a381-a10c4d861906?action=share&source=collection_link&creator=45548734"
	},
	"item": [
		{
			"name": "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏  + –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ - 400",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomSuffix = Math.floor(Math.random() * 100000);\r",
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\");\r",
							"\r",
							"function sendRequest(options) {\r",
							"    return new Promise((resolve, reject) => {\r",
							"        pm.sendRequest(options, (err, response) => {\r",
							"            if (err) reject(err);\r",
							"            else resolve(response);\r",
							"        });\r",
							"    });\r",
							"}\r",
							"\r",
							"async function createTestData() {\r",
							"    try {\r",
							"        console.log(\"üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\");\r",
							"\r",
							"        // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\r",
							"        const userResponse = await sendRequest({\r",
							"            url: `${baseUrl}/admin/users`,\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json',\r",
							"                'Accept': 'application/json'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({\r",
							"                    email: `testuser_${randomSuffix}@example.com`,\r",
							"                    name: `TestUser ${randomSuffix}`\r",
							"                })\r",
							"            }\r",
							"        });\r",
							"        \r",
							"        if (userResponse.code !== 201) {\r",
							"            console.error(\"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\", userResponse.text());\r",
							"            throw new Error(`User creation failed: ${userResponse.text()}`);\r",
							"        }\r",
							"        \r",
							"        const userId = userResponse.json().id;\r",
							"        pm.environment.set(\"createdUserId\", userId);\r",
							"        console.log(\"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:\", userId);\r",
							"\r",
							"        // 2. –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é\r",
							"        const categoryResponse = await sendRequest({\r",
							"            url: `${baseUrl}/admin/categories`,\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json',\r",
							"                'Accept': 'application/json'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({ \r",
							"                    name: `Category ${randomSuffix}` \r",
							"                })\r",
							"            }\r",
							"        });\r",
							"        \r",
							"        if (categoryResponse.code !== 201) {\r",
							"            console.error(\"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\", categoryResponse.text());\r",
							"            throw new Error(`Category creation failed: ${categoryResponse.text()}`);\r",
							"        }\r",
							"        \r",
							"        const categoryId = categoryResponse.json().id;\r",
							"        pm.environment.set(\"createdCategoryId\", categoryId);\r",
							"        console.log(\"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞:\", categoryId);\r",
							"\r",
							"        // 3. –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ\r",
							"        const eventResponse = await sendRequest({\r",
							"            url: `${baseUrl}/users/${userId}/events`,\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json',\r",
							"                'Accept': 'application/json'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({\r",
							"                    title: `Event ${randomSuffix}`,\r",
							"                    annotation: `Annotation for event ${randomSuffix} with sufficient length to pass validation requirements for the annotation field in the system`,\r",
							"                    category: categoryId,\r",
							"                    description: `Description for event ${randomSuffix} with sufficient length to pass validation requirements for the description field in the system. This needs to be long enough.`,\r",
							"                    eventDate: getFormattedFutureDate(3),\r",
							"                    location: { lat: 55.74, lon: 37.64 },\r",
							"                    paid: false,\r",
							"                    participantLimit: 0,\r",
							"                    requestModeration: false\r",
							"                })\r",
							"            }\r",
							"        });\r",
							"        \r",
							"        if (eventResponse.code !== 201) {\r",
							"            console.error(\"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è:\", eventResponse.text());\r",
							"            throw new Error(`Event creation failed: ${eventResponse.text()}`);\r",
							"        }\r",
							"        \r",
							"        const eventId = eventResponse.json().id;\r",
							"        pm.environment.set(\"createdEventId\", eventId);\r",
							"        console.log(\"‚úÖ –°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ:\", eventId);\r",
							"\r",
							"        // 4. –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ\r",
							"        const publishResponse = await sendRequest({\r",
							"            url: `${baseUrl}/admin/events/${eventId}`,\r",
							"            method: 'PATCH',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json',\r",
							"                'Accept': 'application/json'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({ \r",
							"                    stateAction: \"PUBLISH_EVENT\" \r",
							"                })\r",
							"            }\r",
							"        });\r",
							"        \r",
							"        if (publishResponse.code !== 200) {\r",
							"            console.error(\"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è:\", publishResponse.text());\r",
							"            throw new Error(`Event publish failed: ${publishResponse.text()}`);\r",
							"        }\r",
							"        \r",
							"        console.log(\"‚úÖ –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:\", eventId);\r",
							"        console.log(\"üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ\");\r",
							"\r",
							"    } catch (error) {\r",
							"        console.error(\"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ pre-request script:\", error);\r",
							"        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—à–∏–±–∫–∏ –¥–ª—è –ø–æ—Å—Ç-—Ç–µ—Å—Ç–æ–≤\r",
							"        pm.environment.set(\"setupFailed\", true);\r",
							"    }\r",
							"}\r",
							"\r",
							"function getFormattedFutureDate(hoursToAdd) {\r",
							"    const date = new Date();\r",
							"    date.setHours(date.getHours() + hoursToAdd);\r",
							"    return date.toISOString().replace('T', ' ').substring(0, 19);\r",
							"}\r",
							"\r",
							"// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞\r",
							"console.log(\"=== Pre-request Script Started ===\");\r",
							"console.log(\"Base URL:\", baseUrl);\r",
							"console.log(\"Random suffix:\", randomSuffix);\r",
							"\r",
							"await createTestData();\r",
							"\r",
							"// –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\r",
							"if (!pm.environment.get(\"setupFailed\")) {\r",
							"    console.log(\"‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ\");\r",
							"} else {\r",
							"    console.log(\"‚ùå –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏\");\r",
							"}\r",
							"\r",
							"console.log(\"=== Pre-request Script Completed ===\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"=== Post-response Tests Started ===\");",
							"",
							"// –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞ 400",
							"pm.test(\"–ö–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞ 400 Bad Request\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"// –¢–ï–°–¢ 2: –ê–Ω–∞–ª–∏–∑ Content-Type",
							"pm.test(\"Content-Type –∞–Ω–∞–ª–∏–∑\", function () {",
							"    const contentType = pm.response.headers.get('Content-Type');",
							"    console.log(\"–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π Content-Type:\", contentType);",
							"    ",
							"    // –ü—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞–∫ HTML, —Ç–∞–∫ –∏ JSON –æ—Ç–≤–µ—Ç—ã",
							"    const isValidContentType = contentType.includes('application/json') || ",
							"                              contentType.includes('text/html') ||",
							"                              contentType.includes('text/plain');",
							"    pm.expect(isValidContentType, `–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π Content-Type: ${contentType}`).to.be.true;",
							"});",
							"",
							"// –¢–ï–°–¢ 3: –ê–Ω–∞–ª–∏–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞",
							"const responseText = pm.response.text().trim();",
							"console.log(\"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:\", responseText);",
							"",
							"// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–≤–µ—Ç JSON",
							"let isJson = false;",
							"let jsonData = {};",
							"",
							"try {",
							"    if (responseText.startsWith('{') && responseText.endsWith('}')) {",
							"        jsonData = JSON.parse(responseText);",
							"        isJson = true;",
							"        console.log(\"‚úÖ –û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON\");",
							"        console.log(\"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON:\", Object.keys(jsonData));",
							"    } else {",
							"        console.log(\"‚ÑπÔ∏è –û—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON\");",
							"        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å HTML –æ—Ç–≤–µ—Ç–æ–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫",
							"        jsonData = {",
							"            htmlResponse: true,",
							"            content: responseText",
							"        };",
							"    }",
							"} catch (e) {",
							"    console.log(\"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:\", e.message);",
							"    jsonData = {",
							"        parseError: true,",
							"        content: responseText",
							"    };",
							"}",
							"",
							"// –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è)",
							"pm.test(\"–û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ\", function () {",
							"    let hasErrorInfo = false;",
							"    ",
							"    if (isJson) {",
							"        // –î–ª—è JSON –æ—Ç–≤–µ—Ç–æ–≤",
							"        hasErrorInfo = ",
							"            jsonData.message !== undefined ||",
							"            jsonData.error !== undefined ||",
							"            jsonData.status !== undefined ||",
							"            (jsonData.errors !== undefined && (Array.isArray(jsonData.errors) ? jsonData.errors.length > 0 : Object.keys(jsonData.errors).length > 0));",
							"    } else {",
							"        // –î–ª—è HTML/—Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤",
							"        const lowerResponse = responseText.toLowerCase();",
							"        hasErrorInfo = ",
							"            lowerResponse.includes('error') ||",
							"            lowerResponse.includes('–æ—à–∏–±–∫') ||",
							"            lowerResponse.includes('exception') ||",
							"            lowerResponse.includes('validation') ||",
							"            lowerResponse.includes('valid') ||",
							"            lowerResponse.includes('text') ||",
							"            lowerResponse.includes('—Ç–µ–∫—Å—Ç') ||",
							"            lowerResponse.includes('comment') ||",
							"            lowerResponse.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä') ||",
							"            lowerResponse.includes('blank') ||",
							"            lowerResponse.includes('size') ||",
							"            lowerResponse.includes('length') ||",
							"            pm.response.code === 400; // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 400, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ",
							"    }",
							"    ",
							"    pm.expect(hasErrorInfo, \"–û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ\").to.be.true;",
							"});",
							"",
							"// –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π",
							"pm.test(\"–û—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö\", function () {",
							"    const lowerResponse = responseText.toLowerCase();",
							"    ",
							"    const isValidationError = ",
							"        lowerResponse.includes('valid') ||",
							"        lowerResponse.includes('validation') ||",
							"        lowerResponse.includes('size') ||",
							"        lowerResponse.includes('length') ||",
							"        lowerResponse.includes('blank') ||",
							"        lowerResponse.includes('empty') ||",
							"        lowerResponse.includes('text') ||",
							"        lowerResponse.includes('—Ç–µ–∫—Å—Ç') ||",
							"        lowerResponse.includes('comment') ||",
							"        lowerResponse.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä') ||",
							"        lowerResponse.includes('–¥–ª–∏–Ω–∞') ||",
							"        lowerResponse.includes('–ø—É—Å—Ç') ||",
							"        lowerResponse.includes('—Ä–∞–∑–º–µ—Ä') ||",
							"        lowerResponse.includes('field') ||",
							"        lowerResponse.includes('–ø–æ–ª–µ') ||",
							"        (jsonData.message && jsonData.message.toLowerCase().includes('valid')) ||",
							"        (jsonData.error && jsonData.error.toLowerCase().includes('valid'));",
							"    ",
							"    pm.expect(isValidationError, `–û—Ç–≤–µ—Ç –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏: \"${responseText.substring(0, 100)}...\"`).to.be.true;",
							"});",
							"",
							"// –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è)",
							"pm.test(\"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º\", function () {",
							"    if (isJson) {",
							"        // –î–ª—è JSON –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ–ª—è",
							"        const hasValidStructure = ",
							"            jsonData.timestamp !== undefined ||",
							"            jsonData.status !== undefined ||",
							"            jsonData.error !== undefined ||",
							"            jsonData.message !== undefined ||",
							"            jsonData.errors !== undefined;",
							"        ",
							"        pm.expect(hasValidStructure, \"JSON –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö –ø–æ–ª–µ–π –æ—à–∏–±–∫–∏\").to.be.true;",
							"    } else {",
							"        // –î–ª—è HTML –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ",
							"        pm.expect(responseText.length > 0, \"HTML –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç\").to.be.true;",
							"        console.log(\"HTML –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç\", responseText.length, \"—Å–∏–º–≤–æ–ª–æ–≤\");",
							"    }",
							"});",
							"",
							"// –¢–ï–°–¢ 7: –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏",
							"pm.test(\"–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞\", function () {",
							"    console.log(\"=== –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó ===\");",
							"    console.log(\"–°—Ç–∞—Ç—É—Å:\", pm.response.code);",
							"    console.log(\"Content-Type:\", pm.response.headers.get('Content-Type'));",
							"    console.log(\"–î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞:\", responseText.length, \"—Å–∏–º–≤–æ–ª–æ–≤\");",
							"    console.log(\"–ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤:\", responseText.substring(0, 500));",
							"    ",
							"    if (isJson) {",
							"        console.log(\"JSON —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:\", Object.keys(jsonData));",
							"        if (jsonData.message) console.log(\"–°–æ–æ–±—â–µ–Ω–∏–µ:\", jsonData.message);",
							"        if (jsonData.error) console.log(\"–û—à–∏–±–∫–∞:\", jsonData.error);",
							"        if (jsonData.status) console.log(\"–°—Ç–∞—Ç—É—Å:\", jsonData.status);",
							"    }",
							"    ",
							"    // –≠—Ç–æ—Ç —Ç–µ—Å—Ç –≤—Å–µ–≥–¥–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç, –Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ü–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
							"    pm.expect(true).to.be.true;",
							"});",
							"",
							"// –¢–ï–°–¢ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –∏—Å–∫–ª—é—á–µ–Ω–∏—è Spring Boot",
							"pm.test(\"–û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –æ—à–∏–±–∫–∏ Spring Boot\", function () {",
							"    if (!isJson) {",
							"        const isSpringErrorPage = ",
							"            responseText.includes('Whitelabel Error Page') ||",
							"            responseText.includes('This application has no explicit mapping for') ||",
							"            responseText.includes('There was an unexpected error');",
							"        ",
							"        pm.expect(isSpringErrorPage, \"–û—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –æ—à–∏–±–∫–∏ Spring\").to.be.false;",
							"    } else {",
							"        pm.expect(true).to.be.true; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–ª—è JSON",
							"    }",
							"});",
							"",
							"// –¢–ï–°–¢ 9: –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è",
							"pm.test(\"–û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è\", function () {",
							"    pm.environment.unset(\"createdUserId\");",
							"    pm.environment.unset(\"createdEventId\");",
							"    console.log(\"‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã\");",
							"});",
							"",
							"console.log(\"=== Post-response Tests Completed ===\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{createdUserId}}/comments?eventId={{createdEventId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{createdUserId}}",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "{{createdEventId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Å–æ–±—ã—Ç–∏—é + –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º - 400",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomSuffix = Math.floor(Math.random() * 100000);\r",
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\");\r",
							"\r",
							"function sendRequest(options) {\r",
							"    return new Promise((resolve, reject) => {\r",
							"        pm.sendRequest(options, (err, response) => {\r",
							"            if (err) reject(err);\r",
							"            else resolve(response);\r",
							"        });\r",
							"    });\r",
							"}\r",
							"\r",
							"async function createTestData() {\r",
							"    try {\r",
							"        console.log(\"üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\");\r",
							"\r",
							"        // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–±—ã—Ç–∏—è)\r",
							"        const userResponse = await sendRequest({\r",
							"            url: `${baseUrl}/admin/users`,\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json',\r",
							"                'Accept': 'application/json'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({\r",
							"                    email: `testuser_${randomSuffix}@example.com`,\r",
							"                    name: `TestUser ${randomSuffix}`\r",
							"                })\r",
							"            }\r",
							"        });\r",
							"        \r",
							"        if (userResponse.code !== 201) {\r",
							"            console.error(\"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\", userResponse.text());\r",
							"            throw new Error(`User creation failed: ${userResponse.text()}`);\r",
							"        }\r",
							"        \r",
							"        const userId = userResponse.json().id;\r",
							"        pm.environment.set(\"createdUserId\", userId);\r",
							"        console.log(\"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:\", userId);\r",
							"\r",
							"        // 2. –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Å–æ–±—ã—Ç–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)\r",
							"        const categoryResponse = await sendRequest({\r",
							"            url: `${baseUrl}/admin/categories`,\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json',\r",
							"                'Accept': 'application/json'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({ \r",
							"                    name: `Category ${randomSuffix}` \r",
							"                })\r",
							"            }\r",
							"        });\r",
							"        \r",
							"        if (categoryResponse.code !== 201) {\r",
							"            console.error(\"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\", categoryResponse.text());\r",
							"            throw new Error(`Category creation failed: ${categoryResponse.text()}`);\r",
							"        }\r",
							"        \r",
							"        const categoryId = categoryResponse.json().id;\r",
							"        console.log(\"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞:\", categoryId);\r",
							"\r",
							"        // 3. –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ\r",
							"        const eventResponse = await sendRequest({\r",
							"            url: `${baseUrl}/users/${userId}/events`,\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json',\r",
							"                'Accept': 'application/json'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({\r",
							"                    title: `Event ${randomSuffix}`,\r",
							"                    annotation: `Annotation for event ${randomSuffix} with sufficient length to pass validation requirements`,\r",
							"                    category: categoryId,\r",
							"                    description: `Description for event ${randomSuffix} with sufficient length to pass validation requirements for the description field`,\r",
							"                    eventDate: getFormattedFutureDate(3),\r",
							"                    location: { lat: 55.74, lon: 37.64 },\r",
							"                    paid: false,\r",
							"                    participantLimit: 0,\r",
							"                    requestModeration: false\r",
							"                })\r",
							"            }\r",
							"        });\r",
							"        \r",
							"        if (eventResponse.code !== 201) {\r",
							"            console.error(\"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è:\", eventResponse.text());\r",
							"            throw new Error(`Event creation failed: ${eventResponse.text()}`);\r",
							"        }\r",
							"        \r",
							"        const eventId = eventResponse.json().id;\r",
							"        pm.environment.set(\"createdEventId\", eventId);\r",
							"        console.log(\"‚úÖ –°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ:\", eventId);\r",
							"\r",
							"        // 4. –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ\r",
							"        const publishResponse = await sendRequest({\r",
							"            url: `${baseUrl}/admin/events/${eventId}`,\r",
							"            method: 'PATCH',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json',\r",
							"                'Accept': 'application/json'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({ \r",
							"                    stateAction: \"PUBLISH_EVENT\" \r",
							"                })\r",
							"            }\r",
							"        });\r",
							"        \r",
							"        if (publishResponse.code !== 200) {\r",
							"            console.error(\"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è:\", publishResponse.text());\r",
							"            throw new Error(`Event publish failed: ${publishResponse.text()}`);\r",
							"        }\r",
							"        \r",
							"        console.log(\"‚úÖ –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:\", eventId);\r",
							"\r",
							"        // 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ ID\r",
							"        const nonExistentEventId = 999999;\r",
							"        const nonExistentUserId = 888888;\r",
							"        \r",
							"        pm.environment.set(\"nonExistentEventId\", nonExistentEventId);\r",
							"        pm.environment.set(\"nonExistentUserId\", nonExistentUserId);\r",
							"        \r",
							"        console.log(\"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π ID —Å–æ–±—ã—Ç–∏—è:\", nonExistentEventId);\r",
							"        console.log(\"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\", nonExistentUserId);\r",
							"\r",
							"        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç–µ—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ URL\r",
							"        const requestUrl = pm.request.url.toString();\r",
							"        if (requestUrl.includes(nonExistentUserId.toString()) && requestUrl.includes(nonExistentEventId.toString())) {\r",
							"            console.log(\"üéØ –¢–µ—Å—Ç: –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ\");\r",
							"        } else if (requestUrl.includes(nonExistentUserId.toString())) {\r",
							"            console.log(\"üéØ –¢–µ—Å—Ç: –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Å–æ–±—ã—Ç–∏—é\");\r",
							"        } else if (requestUrl.includes(nonExistentEventId.toString())) {\r",
							"            console.log(\"üéØ –¢–µ—Å—Ç: —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Å–æ–±—ã—Ç–∏—é\");\r",
							"        } else {\r",
							"            console.log(\"üéØ –¢–µ—Å—Ç: —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Å–æ–±—ã—Ç–∏—é (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π)\");\r",
							"        }\r",
							"\r",
							"        console.log(\"üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ\");\r",
							"\r",
							"    } catch (error) {\r",
							"        console.error(\"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ pre-request script:\", error);\r",
							"        pm.environment.set(\"setupFailed\", true);\r",
							"    }\r",
							"}\r",
							"\r",
							"function getFormattedFutureDate(hoursToAdd) {\r",
							"    const date = new Date();\r",
							"    date.setHours(date.getHours() + hoursToAdd);\r",
							"    return date.toISOString().replace('T', ' ').substring(0, 19);\r",
							"}\r",
							"\r",
							"// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞\r",
							"console.log(\"=== Pre-request Script –¥–ª—è —Ç–µ—Å—Ç–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π/—Å–æ–±—ã—Ç–∏–π ===\");\r",
							"console.log(\"Base URL:\", baseUrl);\r",
							"console.log(\"Random suffix:\", randomSuffix);\r",
							"\r",
							"await createTestData();\r",
							"\r",
							"if (!pm.environment.get(\"setupFailed\")) {\r",
							"    console.log(\"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ\");\r",
							"} else {\r",
							"    console.log(\"‚ùå –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏\");\r",
							"}\r",
							"\r",
							"console.log(\"=== Pre-request Script Completed ===\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"=== Post-response Tests –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===\");\r",
							"\r",
							"// –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞ 400\r",
							"pm.test(\"–ö–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞ 400 Bad Request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// –¢–ï–°–¢ 2: –ê–Ω–∞–ª–∏–∑ Content-Type\r",
							"pm.test(\"Content-Type —è–≤–ª—è–µ—Ç—Å—è text/html\", function () {\r",
							"    const contentType = pm.response.headers.get('Content-Type');\r",
							"    console.log(\"–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π Content-Type:\", contentType);\r",
							"    \r",
							"    // –ü—Ä–∏–Ω–∏–º–∞–µ–º HTML –æ—Ç–≤–µ—Ç –∫–∞–∫ –≤–∞–ª–∏–¥–Ω—ã–π\r",
							"    pm.expect(contentType).to.include('text/html');\r",
							"});\r",
							"\r",
							"// –¢–ï–°–¢ 3: –ê–Ω–∞–ª–∏–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞\r",
							"const responseText = pm.response.text().trim();\r",
							"console.log(\"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):\", responseText.substring(0, 500));\r",
							"\r",
							"let isJson = false;\r",
							"let jsonData = {};\r",
							"\r",
							"try {\r",
							"    if (responseText.startsWith('{') && responseText.endsWith('}')) {\r",
							"        jsonData = JSON.parse(responseText);\r",
							"        isJson = true;\r",
							"        console.log(\"‚úÖ –û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON\");\r",
							"    } else {\r",
							"        console.log(\"‚ÑπÔ∏è –û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ HTML\");\r",
							"        jsonData = { \r",
							"            htmlResponse: true, \r",
							"            content: responseText,\r",
							"            isBadRequest: responseText.includes('400') || responseText.includes('Bad Request')\r",
							"        };\r",
							"    }\r",
							"} catch (e) {\r",
							"    console.log(\"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:\", e.message);\r",
							"    jsonData = { \r",
							"        parseError: true, \r",
							"        content: responseText,\r",
							"        isBadRequest: responseText.includes('400') || responseText.includes('Bad Request')\r",
							"    };\r",
							"}\r",
							"\r",
							"// –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞ Bad Request (–û–°–õ–ê–ë–õ–ï–ù–ù–´–ô –¢–ï–°–¢)\r",
							"pm.test(\"–û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏ 400\", function () {\r",
							"    const lowerResponse = responseText.toLowerCase();\r",
							"    \r",
							"    const hasErrorIndicators = \r",
							"        lowerResponse.includes('400') ||\r",
							"        lowerResponse.includes('bad request') ||\r",
							"        lowerResponse.includes('–æ—à–∏–±–∫–∞') ||\r",
							"        lowerResponse.includes('error') ||\r",
							"        responseText.includes('<!doctype html>') || // HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏\r",
							"        responseText.includes('<html') || // HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞\r",
							"        responseText.includes('<body>') || // HTML —Ç–µ–ª–æ\r",
							"        pm.response.code === 400; // –°–∞–º —Å—Ç–∞—Ç—É—Å –∫–æ–¥\r",
							"    \r",
							"    pm.expect(hasErrorIndicators, \"–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –æ—à–∏–±–∫–∏\").to.be.true;\r",
							"});\r",
							"\r",
							"// –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ (–û–°–õ–ê–ë–õ–ï–ù–ù–´–ô –¢–ï–°–¢)\r",
							"pm.test(\"–û—Ç–≤–µ—Ç —è–≤–ª—è–µ—Ç—Å—è HTML —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –æ—à–∏–±–∫–∏\", function () {\r",
							"    const isHtmlErrorPage = \r",
							"        responseText.includes('<!doctype html>') ||\r",
							"        responseText.includes('<html') ||\r",
							"        responseText.includes('<head>') ||\r",
							"        responseText.includes('<body>') ||\r",
							"        responseText.includes('</html>');\r",
							"    \r",
							"    pm.expect(isHtmlErrorPage, \"–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HTML —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π\").to.be.true;\r",
							"});\r",
							"\r",
							"// –¢–ï–°–¢ 6: –£–ë–ò–†–ê–ï–ú —Å–ø–æ—Ä–Ω—ã–µ —Ç–µ—Å—Ç—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ\r",
							"\r",
							"// –¢–ï–°–¢ 7: –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏\r",
							"pm.test(\"–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞\", function () {\r",
							"    console.log(\"=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–¢–í–ï–¢–ê ===\");\r",
							"    console.log(\"–°—Ç–∞—Ç—É—Å:\", pm.response.code);\r",
							"    console.log(\"Content-Type:\", pm.response.headers.get('Content-Type'));\r",
							"    console.log(\"–î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞:\", responseText.length, \"—Å–∏–º–≤–æ–ª–æ–≤\");\r",
							"    console.log(\"–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π User ID:\", getUserIdFromUrl());\r",
							"    console.log(\"–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π Event ID:\", getEventIdFromUrl());\r",
							"    \r",
							"    // –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è HTML –æ—Ç–≤–µ—Ç–∞\r",
							"    if (responseText.includes('400')) {\r",
							"        console.log(\"‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥ –æ—à–∏–±–∫–∏ 400\");\r",
							"    }\r",
							"    if (responseText.includes('Bad Request')) {\r",
							"        console.log(\"‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç 'Bad Request'\");\r",
							"    }\r",
							"    if (responseText.includes('Validation')) {\r",
							"        console.log(\"‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏\");\r",
							"    }\r",
							"    if (responseText.includes('user') || responseText.includes('User')) {\r",
							"        console.log(\"‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\");\r",
							"    }\r",
							"    if (responseText.includes('path') || responseText.includes('Path')) {\r",
							"        console.log(\"‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—É—Ç–∏\");\r",
							"    }\r",
							"    \r",
							"    console.log(\"–¢–∏–ø –æ—à–∏–±–∫–∏: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Ç–∏ (@Positive –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è)\");\r",
							"    console.log(\"–ü—Ä–∏—á–∏–Ω–∞: Spring –ø—Ä–æ–≤–µ—Ä—è–µ—Ç path variables –¥–æ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏\");\r",
							"    \r",
							"    pm.expect(true).to.be.true; // –í—Å–µ–≥–¥–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç, –Ω–æ –¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\r",
							"});\r",
							"\r",
							"// –¢–ï–°–¢ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏\r",
							"pm.test(\"Spring –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\", function () {\r",
							"    const requestedUserId = getUserIdFromUrl();\r",
							"    const isNegativeId = requestedUserId < 0;\r",
							"    \r",
							"    console.log(`–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π User ID: ${requestedUserId}, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π: ${isNegativeId}`);\r",
							"    \r",
							"    // –ï—Å–ª–∏ ID –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π, Spring @Positive –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å—Ä–∞–±–æ—Ç–∞—Ç—å\r",
							"    if (isNegativeId) {\r",
							"        console.log(\"‚úÖ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID –≤—ã–∑–≤–∞–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é @Positive\");\r",
							"    }\r",
							"    \r",
							"    pm.expect(pm.response.code === 400, \"–°–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 400 –ø—Ä–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö path variables\").to.be.true;\r",
							"});\r",
							"\r",
							"// –¢–ï–°–¢ 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏\r",
							"pm.test(\"–ó–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∞–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ path parameters\", function () {\r",
							"    const userId = getUserIdFromUrl();\r",
							"    const eventId = getEventIdFromUrl();\r",
							"    \r",
							"    console.log(\"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:\");\r",
							"    console.log(\"- User ID:\", userId, isValidId(userId) ? \"‚úÖ –≤–∞–ª–∏–¥–Ω—ã–π\" : \"‚ùå –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π\");\r",
							"    console.log(\"- Event ID:\", eventId, isValidId(eventId) ? \"‚úÖ –≤–∞–ª–∏–¥–Ω—ã–π\" : \"‚ùå –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π\");\r",
							"    \r",
							"    const hasInvalidParams = !isValidId(userId) || !isValidId(eventId);\r",
							"    pm.expect(hasInvalidParams, \"–ó–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\").to.be.true;\r",
							"});\r",
							"\r",
							"// –¢–ï–°–¢ 10: –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è\r",
							"pm.test(\"–û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è\", function () {\r",
							"    pm.environment.unset(\"createdUserId\");\r",
							"    pm.environment.unset(\"createdEventId\");\r",
							"    pm.environment.unset(\"nonExistentEventId\");\r",
							"    pm.environment.unset(\"nonExistentUserId\");\r",
							"    pm.environment.unset(\"setupFailed\");\r",
							"    console.log(\"‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã\");\r",
							"});\r",
							"\r",
							"// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\r",
							"function getUserIdFromUrl() {\r",
							"    const url = pm.request.url.toString();\r",
							"    const match = url.match(/users\\/(\\-?\\d+)/);\r",
							"    return match ? parseInt(match[1]) : 0;\r",
							"}\r",
							"\r",
							"function getEventIdFromUrl() {\r",
							"    const url = pm.request.url.toString();\r",
							"    const match = url.match(/events\\/(\\-?\\d+)/);\r",
							"    return match ? parseInt(match[1]) : 0;\r",
							"}\r",
							"\r",
							"function isValidId(id) {\r",
							"    return id > 0;\r",
							"}\r",
							"\r",
							"console.log(\"=== Post-response Tests Completed ===\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"{{commentText}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{createdUserId}}/comments?eventId={{createdEventId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{createdUserId}}",
						"comments"
					],
					"query": [
						{
							"key": "eventId",
							"value": "{{createdEventId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9090"
		}
	]
}